{"version":3,"sources":["Components/Account.js","Components/Home.js","util/index.js","Components/SendMessage.js","Components/Inbox.js","Components/Login.js","Components/Logout.js","Components/MyPosts.js","Components/NewPost.js","Components/Posts.js","Components/Register.js","index.js"],"names":["Account","isLoggedIn","currentUser","navigate","useNavigate","useEffect","username","className","to","src","alt","Home","fetchUserData","authToken","a","user_data_headers","fetch","headers","response","json","result","console","log","addPost","token","NewPost","event","preventDefault","method","body","JSON","stringify","post","deletePost","post_id","addComment","comment","content","SendMessage","useState","setUsername","setComment","createMessage","alert","onSubmit","type","id","placeholder","minLength","value","onChange","target","required","Inbox","Login","setToken","setIsLoggedIn","setCurrentUser","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","submitAccountInfo","user","data","userData","error","Logout","allPosts","MyPosts","posts","setPosts","useSearchParams","searchParams","setSearchParams","searchTerm","get","fetchMyPosts","postResult","filteredPosts","filter","text","toLowerCase","title","description","location","price","includes","searchPosts","handleDelete","newPost","_id","name","length","map","idx","author","onClick","blankPost","willDeliver","setPost","createPost","checked","Posts","fetchPosts","Register","confirmPassword","setConfirmPassword","createAccount","App","savedToken","localStorage","getItem","guest","path","element","exact","ssetIsLoggedIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7199a67.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./Account.css\"\n\nconst Account = ({isLoggedIn, currentUser}) => {\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if(!isLoggedIn) navigate(\"/login\")\n    },[])\n\n    return <>\n        <h1>Account Page</h1>\n        <h2> Welcome {currentUser && currentUser.username} </h2>\n        <div className=\"accountIconsContainer\">\n            <div>\n            <Link className=\"inbox\" to=\"/inbox\"><img src=\"images/inbox.png\" \n                alt=\"Inbox\"></img>Inbox</Link>\n            </div>\n            <div>\n            <Link className=\"newPost\" to=\"/newpost\"><img src=\"images/createNewPost.png\" \n                alt=\"Create a New Post\"></img>Create a New Post</Link>\n            </div>\n            <div>\n            <Link className=\"myPosts\" to=\"/myposts\"><img src=\"images/myPosts.png\"\n                alt=\"My Posts\"></img>My Posts</Link>\n            </div>\n        </div>\n    </>\n}\n\nexport default Account;","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n    return <>\n    <h1>Welcome to Stranger's Things</h1>\n    <img className=\"spongebob\" src=\"./images/SpongebobTrade.jpeg\" alt=\"Spongebob scene where two fish trade boxes\"></img>\n    <h3> Buy, sell, and trade your goods today!</h3>\n    </>\n}\n\nexport default Home; ","export const fetchPosts = async () => {\n    try {\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts')\n      const result = await response.json()\n      return result.data.posts\n    } catch (error) {\n      console.log(error)\n    }\n}\n  \nexport const fetchUserData = async (authToken) => {\n  try {\n    const user_data_headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${authToken}`\n    }\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n      headers: user_data_headers\n    })\n    const result = await response.json()\n    return result\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const addPost = async (token, NewPost) => {\n  try {\n    console.log(\"util js\")\n    // console.log(token)\n    event.preventDefault();\n    const response = await fetch(\"https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: NewPost\n      })\n    })\n    const result = await response.json()\n    console.log(result)\n  } catch (error){\n    console.log(error)\n  }\n}\n\nexport const deletePost = async (token, post_id) => {\n  try {\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    const result = await response.json()\n    console.log(result)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const addComment = async (token, post_id, comment) => {\n  try {\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}/comments`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        comment: {\n          content: comment\n        }\n      })\n    })\n    const result = await response.json()\n    return result\n  } catch (error) {\n    console.log(error)\n  }\n}","import React, { useState , useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addComment } from \"../util\";\nimport \"./SendMessage.css\";\n\nconst SendMessage = ({isLoggedIn, token, post_id}) => {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n\n    useEffect(() => {\n        if(!isLoggedIn) navigate(\"/login\")\n    },[])\n\n    const createMessage = async (event) => {\n        event.preventDefault();\n        const result = await addComment(token, post_id, comment)\n        alert(\"Message Sent\")\n        navigate(\"/posts\")\n    }\n\n    return <>\n    <h1>Send Message</h1>\n    <form onSubmit={createMessage}>\n        <input type=\"text\" id=\"username\" placeholder=\"My Username\" minLength=\"1\" value={username} onChange={(event) => setUsername(event.target.value)} required/>   \n        <textarea type=\"text\" id=\"message\" placeholder=\"Enter Message Here\" minLength=\"1\" value={comment} onChange={(event) => setComment(event.target.value)} required/>\n        <br />\n        <button type=\"submit\">Send Message</button>\n    </form>\n    </>\n}\n\nexport default SendMessage;","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SendMessage } from \"./SendMessage.js\";\nimport { useParams } from \"react-router\";\n\nconst Inbox = ({isLoggedIn}) => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if(!isLoggedIn) navigate(\"/login\")\n    },[])\n\n    return <h1>Inbox</h1>\n}\n\nexport default Inbox;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { fetchUserData } from \"../util\";\nimport \"./Login.css\"\n\nconst Login = ({setToken, setIsLoggedIn, isLoggedIn, setCurrentUser}) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [showCredentialsError, setShowCredentialsError] = useState(false)\n  const [accountError, setAccountError] = useState(\"\")\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) navigate(\"/account\")\n  }, [])\n  \n  const submitAccountInfo = async (event) => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/login`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n          }\n        })\n      })\n      const result = await response.json()\n      const authToken = result.data.token\n      setToken(authToken)\n      setIsLoggedIn(true)\n      const userData = await fetchUserData(authToken)\n      setCurrentUser(userData.data)\n      setShowCredentialsError(false)\n      navigate(\"/account\")\n    } catch (error) {\n      console.error\n      const errorMessage = \"login\" ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n      setAccountError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  }\n\n  return <>\n    <div className=\"loginForm\">\n      <form onSubmit={submitAccountInfo}>\n      <h1>Login</h1>\n        <input type=\"text\" id=\"username\" placeholder=\"username\" minLength=\"6\" onChange={\n            (event) => {setUsername(event.target.value)}} required/>\n        <input type=\"password\" id=\"password\" placeholder=\"password\" minLength=\"6\" onChange={\n            (event) => {setPassword(event.target.value)}} required/>\n        { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n        <button type=\"submit\">Login</button>\n      </form>\n\n      <div className=\"registerLink\">\n        <Link to=\"/register\">Don't have an account? <br /> Sign up!</Link>\n      </div>\n    </div>\n  </>\n}\n\n  export default Login;","import React from \"react\";\n\n\nconst Logout = () => {\n    return <h1> You have been logged out of your account. </h1>\n}\n\nexport default Logout","import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\"\nimport { deletePost } from \"../util\"\nimport \"./Posts.css\"\n\nconst baseURL = \"https://strangers-things.herokuapp.com\"\nconst cohortName = '2108-CSE-RM-WEB-PT';\nconst allPosts = `${baseURL}/api/${cohortName}/posts`\n\nconst MyPosts = ({isLoggedIn, token, currentUser}) => {\n    const navigate = useNavigate();\n    const [posts, setPosts] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchTerm = searchParams.get(\"searchTerm\")\n\n    useEffect(() => {\n        if(!isLoggedIn) navigate(\"/login\")\n    },[])\n    \n    const fetchMyPosts = async () => {\n        try {\n            const response = await fetch(allPosts);\n            const result = await response.json();\n            if (result.error) throw result.error;\n            const postResult = result.data.posts\n            setPosts(postResult)\n        } catch (error) {\n            console.error(\"Trouble gathering posts!\", error)\n        }\n    }\n    \n    useEffect(fetchMyPosts, [])\n    \n    const searchPosts = (post, text) => {\n        text = text.toLowerCase();\n        const {title, description, location, price} = post;\n        for (const field of [title, description, location, price]) {\n            if(field.toLowerCase().includes(text)) {\n                return true;\n            }\n        }\n    }\n\n    const filteredPosts = searchTerm ? posts.filter(post => searchPosts(post, searchTerm)) : posts;\n\n    const handleDelete = async (post_id) => {\n        await deletePost(token, post_id)\n        const newPost = posts.filter((post) => post_id !== post._id)\n        setPosts(newPost)\n    }\n\n    return <>\n        <h1> My Posts </h1>\n        <div className=\"options\">\n            <input type=\"text\" name=\"search\" placeholder=\"Search\" value={searchTerm} onChange={(event) => {\n                setSearchParams({searchTerm: event.target.value})\n            }}/>\n            <Link className=\"createPostButton\" to=\"/NewPost\">Create a New Post?</Link>\n        </div>\n        {   \n            filteredPosts && filteredPosts.length\n            ? filteredPosts.map((post, idx)=> {\n                if (currentUser.username === post.author.username) {\n                    return <div className=\"Post\" key={idx}>\n                        <div className=\"postColumn1\">\n                            <div className=\"title\">{post.title}</div>\n                            <div className=\"description\">{post.description}</div>\n                            <>\n                                { \n                                currentUser.username === post.author.username && <button onClick={() => handleDelete(post._id)}>Delete</button>\n                                }\n                            </>\n                        </div>\n                        <div className=\"postColumn2\">\n                            <div className=\"username\"><b>Seller:</b> {post.author.username}</div>\n                            <div className=\"location\"><b>Location:</b> {post.location}</div>\n                            <div className=\"price\"><b>Price:</b>{post.price}</div>   \n                        </div>\n                    </div>\n                }\n            })\n            : \"\"\n        }\n    </>\n}\n\nexport default MyPosts;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { addPost } from \"../util\"\nimport \"./NewPost.css\";\n\nconst NewPost = ({token, isLoggedIn}) => {\n  const blankPost = {title: \"\", description: \"\", price: \"\", location: \"\", willDeliver: false}\n  const [post, setPost] = useState(blankPost)\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(!isLoggedIn) navigate(\"/login\")\n},[])\n\n  const createPost = async (event) => {\n    event.preventDefault();\n    await addPost(token, post)\n    setPost(blankPost)\n    navigate('/posts')\n  }\n\n  return <>\n    <h1>Add New Post</h1>\n    <form onSubmit={createPost}>\n\n      <input type=\"text\" name=\"title\" value={post.title} placeholder=\"Item for Sale\" minLength=\"1\" required onChange={(event) => {\n        setPost({...post, title: event.target.value})\n      }}></input>\n      <input type=\"text\" name=\"description\" value={post.description} placeholder=\"Description\" minLength=\"1\" required onChange={(event) => {\n        setPost({...post, description: event.target.value})\n      }}></input>\n      <input type=\"number\" name= \"price\" value={post.price} placeholder=\"Price\" required onChange={(event) => {\n        setPost({...post, price: event.target.value})\n      }}></input>\n      <input type=\"text\" name=\"location\" value={post.location} placeholder=\"Location\" onChange={(event) => {\n        setPost({...post, location: event.target.value})\n      }}></input>\n      <input type=\"checkbox\" id=\"willDeliver\" name=\"willDeliver\" value={post.willDeliver} onChange={(event) => {\n        setPost({...post, willDeliver: event.target.checked})\n      }}></input>\n      <label name=\"willDeliver\">Willing to Deliver?</label>\n      <br />\n      <button type=\"submit\">Create</button>\n    </form>\n  </>\n}\n\n  export default NewPost;","import React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\"\nimport { deletePost } from \"../util\"\nimport \"./Posts.css\"\n\nconst baseURL = \"https://strangers-things.herokuapp.com\"\nconst cohortName = '2108-CSE-RM-WEB-PT';\nconst allPosts = `${baseURL}/api/${cohortName}/posts`\n\nconst Posts = ({token, currentUser}) => {\n    const [posts, setPosts] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchTerm = searchParams.get(\"searchTerm\")\n\n    const fetchPosts = async () => {\n        try {\n            const response = await fetch(allPosts);\n            const result = await response.json();\n            if (result.error) throw result.error;\n            const postResult = result.data.posts\n            setPosts(postResult)\n        } catch (error) {\n            console.error(\"Trouble gathering posts!\", error)\n        }\n    }\n\n    useEffect(fetchPosts, [])\n\n    const searchPosts = (post, text) => {\n        text = text.toLowerCase();\n        const {title, description, location, price} = post;\n        for (const field of [title, description, location, price]) {\n            if(field.toLowerCase().includes(text)) {\n                return true;\n            }\n        }\n    }\n\n    const filteredPosts = searchTerm ? posts.filter(post => searchPosts(post, searchTerm)) : posts;\n\n    const handleDelete = async (post_id) => {\n        await deletePost(token, post_id)\n        const newPost = posts.filter((post) => post_id !== post._id)\n        setPosts(newPost)\n    }\n\n    return <>\n        <h1>Posts</h1>\n        <div className=\"options\">\n            <input type=\"text\" name=\"search\" placeholder=\"Search\" value={searchTerm} onChange={(event) => {\n                setSearchParams({searchTerm: event.target.value})\n            }}/>\n            <Link className=\"createPostButton\" to=\"/NewPost\">Create a New Post?</Link>\n        </div>\n        {   \n            filteredPosts && filteredPosts.length\n            ? filteredPosts.map((post, idx) => {\n                return <div className=\"Post\" key={idx}>\n                    <div className=\"postColumn1\">\n                        <div className=\"title\">{post.title}</div>\n                        <div className=\"description\">{post.description}</div>\n                        <>\n                            { \n                            currentUser.username === post.author.username && <button onClick={() => handleDelete(post._id)}>Delete</button>\n                            }\n                        </>\n                    </div>\n                    <div className=\"postColumn2\">\n                        <div className=\"username\"><b>Seller:</b> {post.author.username}</div>\n                        <div className=\"location\"><b>Location:</b> {post.location}</div>\n                        <div className=\"price\"><b>Price:</b>{post.price}</div>   \n                        {\n                            currentUser.username !== post.author.username &&\n                                <div className=\"sendMessage\">\n                                    <Link className=\"postImage\" to=\"/sendmessage\"><img src=\"images/sendMessage.png\" alt=\"Send Message\"/></Link>\n                                    <Link className=\"postImage\" to=\"/sendmessage\">Send Message</Link>\n                                </div>\n                        }\n                    </div>\n                </div>\n            })\n            : null\n        }\n    </>\n}\n\nexport default Posts;","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { fetchUserData } from \"../util\";\nimport \"./Register.css\";\n\nconst Register = ({setToken, setIsLoggedIn, setCurrentUser}) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [showCredentialsError, setShowCredentialsError] = useState(false)\n  const [accountError, setAccountError] = useState(\"\")\n\n    const navigate = useNavigate();\n\n    const createAccount = async (event) => {\n      try{ \n        event.preventDefault();\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n          }\n        })\n        })\n      const result = await response.json()\n      const authToken = result.data.token\n      setToken(authToken)\n      setIsLoggedIn(true)\n      const userData = await fetchUserData(authToken)\n      setCurrentUser(userData.data)\n      navigate(\"/account\")\n    } catch (error) {\n        console.error;\n        const errorMessage = \"login\" && \"Username already taken.\"\n        setAccountError(errorMessage);\n        setShowCredentialsError(true);\n    }\n  }\n\n    return <>\n      <h1>REGISTER</h1>\n      <form onSubmit={createAccount}>\n        <input type=\"text\" value={username} id=\"username\" placeholder=\"username\" minLength=\"6\" onChange={\n          (event) => {setUsername(event.target.value)}} required/>\n        <input type=\"password\" value={password} id=\"password\" placeholder=\"password\" minLength=\"6\" onChange={\n          (event) => {setPassword(event.target.value)}} required/>\n        <input type=\"password\" value={confirmPassword} id=\"confirm_password\" name= \"confirm_password\" placeholder=\"confirm password\" onChange={\n          (event) => {setConfirmPassword(event.target.value)}} required/>\n        {password !== confirmPassword && <div>Passwords do not match</div>}\n        { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n        <button type=\"submit\">Create Account</button>\n      </form>\n    </>\n  }\n\n  export default Register;","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Routes, Route, NavLink, BrowserRouter as Router } from \"react-router-dom\"\nimport { useEffect } from \"react/cjs/react.development\";\nimport \"./Index.css\";\n\nimport {\n    Account,\n    Home,\n    Inbox,\n    Login,\n    Logout,\n    MyPosts,\n    NewPost,\n    Posts,\n    Register,\n    SendMessage,\n} from \"./Components/index.js\"\n\nconst App = () => {\n  const [token, setToken] = useState(\"\")\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [currentUser, setCurrentUser] = useState({})\n\n  useEffect(async () => {\n    const savedToken = localStorage.getItem(\"token\")\n    if (savedToken) {\n      setToken(savedToken)\n      setIsLoggedIn(true)\n      const userData = await fetchUserData (savedToken)\n      setCurrentUser(userData.data.guest)\n    }\n  }, [])\n\n  return <>\n    <nav>\n      <h1 className=\"logo\"> Stranger's Things </h1>\n      <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/login\">Account</NavLink>\n      <NavLink to=\"/posts\">Posts</NavLink>\n      {\n        isLoggedIn ? <NavLink to=\"/logout\" onClick={() => {\n          setToken(\"\")\n          setIsLoggedIn(false)\n          setCurrentUser(false)\n        }}>Logout</NavLink> : \"\"\n      }\n    </nav>\n    <hr/>\n    <Routes>\n      <Route path='/account' element={<Account isLoggedIn={isLoggedIn} currentUser={currentUser} />}/>\n      <Route path='/' exact element={ <Home /> }/>\n      <Route path='/inbox' element={<Inbox token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/>}/>\n      <Route path='/login' element={ <Login setToken={setToken} token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> }/>\n      <Route path='/myposts' element={<MyPosts token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} currentUser={currentUser}/>}/>\n      <Route path='/newpost' element={ <NewPost token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> }/>\n      <Route path='/posts' element={<Posts token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} currentUser={currentUser}/>}/>\n      <Route path='/register' element={ <Register setToken={setToken} token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> }/>\n      <Route path='/sendmessage' element={<SendMessage token={token} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/>}/>\n      <Route path=\"/logout\" element={ <Logout ssetIsLoggedIn={setIsLoggedIn} setCurrentUser={setCurrentUser}/>}/>\n    </Routes>\n  </>\n}\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById('app')\n)"],"sourceRoot":""}